CONDITIONAL STATEMENTS (IF)
1)	IF 
2)	IF ELSE 
3)	ELSIF 

IF CONDITION 
	SYNTAX:
	IF CONDITION THEN 
	     STATEMENTS ;
	END IF ;

Get the values from the user if the value is less then 10 then display it 'entered value is less than 10 
  
 EXAMPLE
DECLARE 
   N NUMBER :=&NO ;
BEGIN 
   IF  N<10 THEN 
      DBMS_OUTPUT.PUT_LINE( ' ENTERED LESS THEN : ' || N ) ;
   END IF ;
END ;
/
  
IF  ELSE CONDITION 
  
	SYNTAX:
	IF CONDITION THEN 
	     STATEMENTS ;
	ELSE 
	        STATEMENTS ;
	END IF ;

Get the values from the user if the value is greater then or equal 18 then â€˜you are eligible to vote â€˜  else  â€˜you are not  eligible to vote â€˜ display it 

DECLARE
    DOB DATE := '&DOB' ;
    AGE NUMBER ;
BEGIN
  AGE :=TO_NUMBER(TO_CHAR(SYSDATE,'YY')-TO_CHAR(DOB,'YY'));
      IF  AGE >= 18 THEN
        DBMS_OUTPUT.PUT_LINE( 'YOU ARE ELIGIBLE TO VOTE : ' || AGE ) ;
     ELSE
        DBMS_OUTPUT.PUT_LINE( 'YOU ARE NOT ELIGIBLE TO VOTE : ' || AGE);
      END IF ;
    END ;
/

ELSIF  : 
--------------
 To check more number of condition we are using elsif;
SYNTAX:
	IF CONTITION1 THEN
	     STATEMENTS ;
	ELSIF CONDITION2 THEN 
	    STATEMENTS ;
	ELSIF CONDITION2 THEN 
	    STATEMENTS ;
	ELSIF CONDITION2 THEN 
	    STATEMENTS ;
	ELSE 
	    STATEMENTS ;
	END IF ;
	/


 ðŸ”¹ 1. Simple IF â€“ 5 Questions

These only require a single `IF` without `ELSE`.

1. Declare a variable `v_temp := 40`. If temperature is over 35, print `'Too hot'`.
2. Check if a number `v_num := -10` is negative. If so, print `'Negative'`.
3. If the string `v_city := 'Delhi'`, print `'Capital city'`.
4. If a student's `v_marks := 95`, and itâ€™s over 90, print `'Top scorer'`.
5. Check if `v_count := 0`. If it is zero, print `'No items found'`.

---

ðŸ”¹ 2. IF...ELSE â€“ 5 Questions

These require handling both the true and false outcomes.

1. If `v_age := 21`, print `'Adult'`; else print `'Minor'`.
2. If `v_salary := 4000` is over 5000, print `'High salary'`, else `'Average salary'`.
3. If `v_is_member := 'Y'`, print `'Access granted'`, else `'Access denied'`.
4. If `v_quantity := 0`, print `'Out of stock'`; else `'Available'`.
5. If `v_score := 55` is passing (>=50), print `'Passed'`; else `'Failed'`.

---

## ðŸ”¹ 3. IF...ELSIF...ELSE â€“ 5 Questions

These test multiple condition branches.

1. Given `v_grade := 85`, print:

   * `>= 90` â†’ `'A'`
   * `>= 80` â†’ `'B'`
   * `>= 70` â†’ `'C'`
   * Else â†’ `'F'`

2. If `v_day := 1`, print `'Sunday'`; `2` â†’ `'Monday'`; else â†’ `'Other day'`.

3. Check speed of the user  `v_speed := 120`:

   * `> 100` â†’ `'Over Speed'`
   * `>= 60` â†’ `'Normal Speed'`
   * Else â†’ `'Slow Speed'`

4. For `v_temp := 10`:

   * `< 10` â†’ `'Very Cold'`
   * `10â€“20` â†’ `'Cold'`
   * `20â€“30` â†’ `'Warm'`
   * Else â†’ `'Hot'`

5. For `v_rating := 3`:

   * `5` â†’ `'Excellent'`
   * `4` â†’ `'Good'`
   * `3` â†’ `'Average'`
   * Else â†’ `'Poor'`

---

## ðŸ”¹ 4. Boolean IF â€“ 5 Questions

Use Boolean variables (`TRUE`/`FALSE`).

1. If `v_is_valid := TRUE`, print `'Valid data'`; else `'Invalid data'`.
2. If `v_logged_in := FALSE`, print `'Login required'`.
3. Set `v_has_permission := TRUE`; if true, print `'Permission granted'`.
4. If `v_is_admin := FALSE`, print `'Access denied'`; else `'Welcome, admin'`.
5. Set `v_is_complete := TRUE`; if complete, print `'Task finished'`.

---

## ðŸ”¹ 5. Nested IF â€“ 5 Questions

Conditions inside other conditions.

1. If `v_age > 18`, and `v_has_id := TRUE`, print `'Eligible to vote'`; else `'ID required'`.
2. If `v_salary > 5000`, and `v_experience > 5`, print `'Eligible for promotion'`; else `'Not enough experience'`.
3. If `v_user = 'admin'`, and `v_password = 'admin123'`, print `'Login successful'`; else `'Wrong password'`.
4. If `v_temp > 30`, and `v_humidity > 70`, print `'High heat index'`; else `'Normal heat'`.
5. If `v_marks > 60`, and `v_attendance >= 75`, print `'Eligible for exam'`; else `'Low attendance'`.
